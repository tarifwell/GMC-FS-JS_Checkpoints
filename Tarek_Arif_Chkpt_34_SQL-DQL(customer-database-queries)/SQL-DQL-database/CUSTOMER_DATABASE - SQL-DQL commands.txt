-- Retrieve data from our database "CUSTOMER_DATABASE" tables  using DQL language
-- Use of MySQL Console

-- Based on the following relational model (previous database)
-- Customer(Customer_id, customer_Name, customer_Tel)
-- Product(Product_id, product_name, Category, Price)
-- Orders(#Customer_id, #Product_id, OrderDate, quantity, total_amount)


SHOW DATABASES;

USE CUSTOMER_DATABASE;


-- 1. Display all the data of customers 

SELECT * FROM Customer;

-- 2. Display the product_name and category for products which their price is between 5000 and 10000

DESC Product;

SELECT product_name, Category 
FROM Product 
WHERE Price BETWEEN 5000 AND 10000;

-- 3. Display all the data of products sorted in descending order of price.

SELECT *
FROM Product
ORDER BY Price DESC;

-- 4. Display the total number of orders, the average amount, the highest total amount and the lower total amount For each product_id, display the number of orders

DESC Orders;

SELECT COUNT(*), AVG(total_amount), MAX(total_amount), MIN(total_amount)
FROM Orders
GROUP BY Product_id;

-- 5. Display the customer_id which has more than 2 orders

SELECT Customer_id
FROM Orders
WHERE quantity >=2;

-- 6. For each month of the 2020 year, display the number of orders

SELECT COUNT(*), Extract(Month FROM OrderDate) AS Months 
FROM Orders 
WHERE Extract(Year FROM OrderDate) = 2020 
GROUP BY Months;

-- 7. For each order, display the product_name, the customer_name and the date of the order

SELECT product.product_name, customer.customer_Name, Orders.OrderDate
FROM Orders
INNER JOIN customer ON Orders.Customer_id = customer.Customer_id
INNER JOIN product ON Orders.Product_id = product.Product_id;


-- 8. Display all the orders made three months ago 

SELECT * 
FROM Orders 
WHERE MONTH(OrderDate) - MONTH(SYSDATE()) = 3;

-- 9. Display customers (customer_id) who have never ordered a product

SELECT customer.Customer_id, Orders.quantity
FROM customer
INNER JOIN Orders ON Orders.quantity = NULL;


